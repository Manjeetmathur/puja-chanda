import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Link } from 'react-router-dom';
import { uri } from '../backend/Uri';

const transliterate = (hindiText) => {
       const map = {
              '‡§Ö': 'a', '‡§Ü': 'aa', '‡§á': 'i', '‡§à': 'ee', '‡§â': 'u', '‡§ä': 'oo', '‡§è': 'e', '‡§ê': 'ai', '‡§ì': 'o', '‡§î': 'au',
              '‡§ï': 'k', '‡§ñ': 'kh', '‡§ó': 'g', '‡§ò': 'gh', '‡§ö': 'ch', '‡§õ': 'chh', '‡§ú': 'j', '‡§ù': 'jh', '‡§ü': 't', '‡§†': 'th',
              '‡§°': 'd', '‡§¢': 'dh', '‡§£': 'n', '‡§§': 't', '‡§•': 'th', '‡§¶': 'd', '‡§ß': 'dh', '‡§®': 'n', '‡§™': 'p', '‡§´': 'ph',
              '‡§¨': 'b', '‡§≠': 'bh', '‡§Æ': 'm', '‡§Ø': 'y', '‡§∞': 'r', '‡§≤': 'l', '‡§µ': 'v', '‡§∂': 'sh', '‡§∑': 'sh', '‡§∏': 's',
              '‡§π': 'h', '‡§æ': 'a', '‡§ø': 'i', '‡•Ä': 'ee', '‡•Å': 'u', '‡•Ç': 'oo', '‡•á': 'e', '‡•à': 'ai', '‡•ã': 'o', '‡•å': 'au'
       };
       return hindiText.split('').map(char => map[char] || char).join('');
};

const User = () => {
       const [users, setUsers] = useState([]);
       const [st, setSt] = useState(false);
       const [search, setSearch] = useState('');

       useEffect(() => {
              axios.get(`${uri}/all-users`)
                     .then(response => {
                            setUsers(response.data);
                            setSt(true);
                     })
                     .catch(error => console.error('Error fetching users:', error));
       }, []);

       const filteredUsers = users.filter(user => {
              const userName = user.name.toLowerCase();
              const transliteratedName = transliterate(user.name).toLowerCase();
              const query = search.toLowerCase();
              return userName.includes(query) || transliteratedName.includes(query);
       });

       let total = 0;
       users.map(itm => {
              total += itm.pujaChanda
       })
       let bhojantotal = 0;
       users.map(itm => {
              // console.log(itm.khanaChanda)
              bhojantotal += itm.khanaChanda
       })
       return (
              <div className="min-h-screen bg-gradient-to-b from-orange-100 to-gray-50 flex flex-col items-center py-10 px-4">
                     {/* Heading */}
                     <h1 className="text-xl md:text-4xl font-extrabold text-orange-600 mb-8 relative animate-fade-in">
                            ‡§Æ‡§æ‡§Ç ‡§Æ‡§•‡•Å‡§∞‡§æ‡§∏‡§ø‡§®‡•Ä ‡§™‡•Ç‡§ú‡§æ ‡§ö‡§Ç‡§¶‡§æ
                            <span className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-32 h-1 bg-orange-400 rounded-full animate-slide-up"></span>
                     </h1>
                     <div className="flex gap-5 items-center justify-center mb-5">
                            <h1 className="text-lg md:text-4xl font-extrabold text-orange-600  relative animate-fade-in">
                                   üí∞ ‡§ï‡•Å‡§≤ ‡§™‡•Ç‡§ú‡§æ ‡§ö‡§Ç‡§¶‡§æ : ‚Çπ {total}
                            </h1>
                            <Link
                                   to={`/details`}
                                   className="text-blue-500 text-sm font-medium hover:text-orange-800 hover:underline transition-all duration-200  border-2 rounded-xl px-2"
                            >
                                   Details ‚û°
                            </Link>
                     </div>
                     <div className="flex gap-3 items-center justify-center mb-5">
                            <h1 className="text-lg md:text-4xl font-extrabold text-orange-600 m relative animate-fade-in">
                                   üí∞ ‡§ï‡•Å‡§≤ ‡§≠‡•ã‡§ú‡§® ‡§ö‡§Ç‡§¶‡§æ : ‚Çπ {bhojantotal}

                            </h1>
                            <Link
                                   to={`/details`}
                                   className="text-blue-500 text-sm font-medium hover:text-orange-800 hover:underline transition-all duration-200  border-2 rounded-xl px-2"
                            >
                                   Details ‚û°
                            </Link>
                     </div>

                     <h1 className="text-lg md:text-4xl font-extrabold text-orange-600 mb-8 relative animate-fade-in">
                            üí∞ ‡§ï‡•Å‡§≤ ‡§ö‡§Ç‡§¶‡§æ : ‚Çπ {total + bhojantotal}

                     </h1>

                     {/* Search Bar */}
                     <div className="w-full max-w-lg mb-8">
                            <input
                                   type="text"
                                   placeholder="üîç ‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§ñ‡•ã‡§ú‡•á‡§Ç"
                                   value={search}
                                   onChange={(e) => setSearch(e.target.value)}
                                   className="w-full p-3 border bg-white border-gray-700 rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-400 focus:border-transparent transition-all duration-300 text-gray-700 placeholder-gray-400"
                            />
                     </div>

                     {/* User List or Loading */}
                     {st ? (
                            <ul className="w-full max-w-lg bg-white shadow-xl rounded-xl p-6 animate-fade-in delay-200">
                                   <li className="text-lg font-semibold text-gray-800 border-b-2 border-orange-200 pb-3 mb-4 flex justify-between">
                                          <span>‡§®‡§æ‡§Æ</span>
                                          <span>‡§µ‡§ø‡§µ‡§∞‡§£</span>
                                   </li>
                                   {filteredUsers.length > 0 ? (
                                          filteredUsers.map((user, index) => (
                                                 <li
                                                        key={user?._id}
                                                        className="flex justify-between items-center py-3 border-b border-gray-100 hover:bg-orange-50 transition-all duration-200"
                                                 >
                                                        <Link to={`/user/${user._id}`}>
                                                               <span className={` ${user.pujaChanda === 0 && 'text-yellow-400' }  text-md text-blue-500 w-[120px]`}>
                                                                      {index + 1}. {user.name}
                                                               </span>
                                                        </Link>
                                                        <Link
                                                               to={`/user/${user._id}`}
                                                               className="text-blue-600 font-medium hover:text-orange-800 hover:underline transition-all duration-200"
                                                        >
                                                               Details ‚û°
                                                        </Link>
                                                 </li>
                                          ))
                                   ) : (
                                          <li className="text-md text-gray-500 text-center py-4">‡§ï‡•ã‡§à ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ</li>
                                   )}
                            </ul>
                     ) : (
                            <div className="flex items-center justify-center text-lg font-semibold text-gray-600 animate-pulse">
                                   <svg className="animate-spin h-6 w-6 mr-3 text-orange-600" viewBox="0 0 24 24">
                                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4" fill="none" />
                                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8h8a8 8 0 01-16 0z" />
                                   </svg>
                                   ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...
                            </div>
                     )}
              </div>
       );
};

export default User;